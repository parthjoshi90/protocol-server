version: '3'

services:

  protocol-network-db:
    container_name: protocol-network-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    build:
      context: ./database
      dockerfile: Dockerfile
    networks:
      - seller-api-network
    volumes:
      - protocol_network_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
            "CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  protocol-network-api:
    build:
      context: .
      dockerfile: ./app/Dockerfile    
    container_name: protocol-network-api
    depends_on:
      - protocol-network-db
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - seller-api-network
    env_file:
        - .env
    command: bash -c "uvicorn app.main:app --host 0.0.0.0 --port 8080 --lifespan=on --use-colors --loop uvloop --http httptools --reload --log-level debug"
    volumes:
      - .:/app
    ports:
      - "8000:8080"

networks:
  seller-api-network:
    driver: bridge
volumes:
  protocol_network_data:

